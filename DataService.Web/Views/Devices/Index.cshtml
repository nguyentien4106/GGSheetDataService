@using DataService.Web.Models.Devices
@model IEnumerable<DeviceViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Devices</h1>
<div class="d-flex justify-content-end">
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</div>
<table class="table table-hover">
    <thead>
        <tr>
            <th>
                IP
            </th>
            <th>
               CommKey
            </th>
            <th>
                Port
            </th>
            <th>
                Sheet Name
            </th>
            <th>
                Document Id
            </th>
            <th>
                Status
            </th>
            <th class="text-center">
                Action
            </th>
            <th>
                Device's Status Action
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Device.Ip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Device.CommKey)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Device.Port)
            </td>
            <td colspan="2">
                <table class="table ">
                    <tbody>
                        @foreach (var sheet in item.Device.Sheets)
                        {
                            <tr>
                                <td>@sheet.SheetName</td>
                                <td>@sheet.DocumentId</td>
                            </tr>
                        }
                    </tbody>
                       
                </table>
                
            </td>
            @* <td>
                <div>
                    @foreach (var sheet in item.Device.Sheets)
                    {
                        <h5>@sheet.DocumentId</h5>
                    }
                </div>
            </td> *@
            <td>
                @if (item.Device.IsConnected)
                {
                    <div>Connected</div>
                }
                else
                {
                    <div>Disconnected</div>
                }
            </td>
            <td>
                <div class="d-flex gap-2 justify-content-center">
                    <a asp-action="Edit" asp-route-id="@item.Device.Id" class="btn btn-primary">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Device.Id" class="btn btn-primary">Details</a>
                    <a class="btn btn-danger delete" device-id="@item.Device.Id">Delete</a>
                </div>
            </td>
            <td>
                <a class="btn btn-primary @(item.Device.IsConnected ? "disconnect" : "connect")" device-id="@item.Device.Id">@(item.Device.IsConnected ? "Disconnect" : "Connect")</a>
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/devices/index.js" asp-append-version="true" type="module"></script>
}

